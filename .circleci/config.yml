version: 2

jobs:
  checkout:
    working_directory: ~/repo
    docker:
      - image: alpine/git:latest
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/
          paths:
            - ./repo

  build:
    working_directory: ~/repo
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ checksum "project.clj" }}
      - run:
          name: Install dependencies
          command: lein deps
      - save_cache:
          key: cache-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
      - persist_to_workspace:
          root: ~/
          paths:
            - .m2

  backend-test:
    working_directory: ~/repo
    docker:
        - image: circleci/clojure:openjdk-11-lein-2.9.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: run backend tests
          command: lein test

  frontend-test:
    working_directory: ~/repo
    docker:
        - image: circleci/clojure:openjdk-11-lein-2.9.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: run frontend tests
          command: lein doo once

  uberjar-staging:
    working_directory: ~/repo
    docker:
        - image: circleci/clojure:openjdk-11-lein-2.9.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: replace clients api url
          command: sed -i 's#localhost:8080#discoverai-snake-staging.herokuapp.com#g' src/cljs/com/github/discoverAI/snake/websocket_api.cljs
      - run:
          name: package in uberjar
          command: lein uberjar
      - persist_to_workspace:
          root: ~/
          paths:
            - repo/target/snake-deploy-standalone.jar

  uberjar-prod:
    working_directory: ~/repo
    docker:
        - image: circleci/clojure:openjdk-11-lein-2.9.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: replace clients api url
          command: sed -i 's#localhost:8080#discoverai-snake-live.herokuapp.com#g' src/cljs/com/github/discoverAI/snake/websocket_api.cljs
      - run:
          name: package in uberjar
          command: lein do clean, uberjar
      - persist_to_workspace:
          root: ~/
          paths:
            - repo/target/snake-deploy-standalone.jar

  dockerize-and-deploy-staging:
    machine: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - run: echo ${DOCKER_USERNAME}
      - run: docker login --username=_ --password=${DOCKER_PASSWORD} registry.heroku.com
      - run: docker build -t registry.heroku.com/discoverai-snake-staging/web .
      - run: docker push registry.heroku.com/discoverai-snake-staging/web
      - run:
          name: release image
          command: |
            curl -n -X PATCH https://api.heroku.com/apps/discoverai-snake-staging/formation \
              -d '{
              "updates": [
                {
                  "type": "web",
                  "docker_image": "$(docker inspect registry.heroku.com/discoverai-snake-staging/web --format={{.Id}})"
                },
              ]
            }' \
              -H "Content-Type: application/json" \
              -H "Accept: application/vnd.heroku+json; version=3.docker-releases"

  dockerize-and-deploy-production:
    machine: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - run: docker login --username=_ --password=$DOCKER_PASSWORD registry.heroku.com
      - run: docker build -t registry.heroku.com/discoverai-snake-live/web .
      - run: docker push registry.heroku.com/discoverai-snake-live/web
      - run:
          name: release image
          command: |
            curl -n -X PATCH https://api.heroku.com/apps/discoverai-snake-live/formation \
              -d '{
              "updates": [
                {
                  "type": "web",
                  "docker_image": "$(docker inspect registry.heroku.com/discoverai-snake-live/web --format={{.Id}})"
                },
              ]
            }' \
              -H "Content-Type: application/json" \
              -H "Accept: application/vnd.heroku+json; version=3.docker-releases"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - checkout
      - build:
          requires:
            - checkout
      - backend-test:
          requires:
            - build
      - frontend-test:
          requires:
            - build
      - uberjar-staging:
          requires:
            - backend-test
            - frontend-test
      - dockerize-and-deploy-staging:
          requires:
            - uberjar-staging
      - uberjar-prod:
          requires:
            - dockerize-and-deploy-staging
      - hold:
          type: approval
          requires:
            - uberjar-prod
      - dockerize-and-deploy-production:
            requires:
              - hold
